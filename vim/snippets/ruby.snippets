# RSpec
snippet desc
	describe "${1}" do
		${2}
	end
snippet bef
	before do
		${1}
	end
snippet it{
	it { ${1} }
snippet it"
	it "${1}" do
		${2}
	end
snippet sh
	should${1}
snippet shn
	should_not${1}
snippet let
	let(${1}) { ${2} }
snippet mm
	mock_model(${1:model})${2:.as_null_object}
snippet shrcv
	should_receive(${1}).
		with(${2}).
		and_return(${3})
# Shoulda ActionController Matchers
snippet shat
	it { should${1:_not} assign_to(${2:variable})${3} }
snippet shfp
	it { should${1:_not} filter_param(${2:key}) }
snippet shrdt
	it { should redirect_to(${1:url_or_description}) }
snippet shrt
	it { should render_template(${1:template}) }
snippet shrwl
	it { should${1:_not} render_with_layout(${2:expected_layout}) }
snippet shrw
	it { should respond_with(${1:status}) }
snippet shrwct
	it { should respond_with_content_type(${1:content_type}) }
snippet shr
	it { should${1:_not} route(:${2:method}, '${3:path}').to(${4}) }
snippet shss
	it { should${1:_not} set_session(${2:key}) }
snippet shstf
	it { should${1:_not} set_the_flash.to(${2:message}) }
# Shoulda ActiveRecord Matchers
snippet shamao
	it { should${1:_not} allow_mass_assignment_of(${2:value}) }
snippet shav
	it { should${1:_not} allow_value(${2:value}).for(${3:attr})${4} }
snippet shbt
	it {should belong_to(${1:name}) }
snippet sheio
	it { should ensure_inclusion_of(${1:attr}).in_range(${2:range})${3} }
snippet shelo
	it { should ensure_length_of(${1:attr})${2} }
snippet shhabtm
	it { should have_and_belong_to_many(${1:name}) }
snippet shhdbc
	it { should have_db_column(${1:column})${2} }
snippet shhdbi
	it { should have_db_index(${1:columns})${2} }
snippet shhm
	it { should have_many(${1:name})${2} }
snippet shho
	it { should have_one(${1:name})${2} }
snippet shhroa
	it { should have_read_only_attribute(${1:value}) }
snippet shvao
	it { should validate_acceptance_of(${1:attr})${2} }
snippet shvfo
	it { should validate_format_of(${1:attr})${2} }
snippet shvno
	it { should validate_numericality_of(${1:attr})${2} }
snippet shvpo
	it { should validate_presence_of(${1:attr})${2} }
snippet shvuo
	it { should validate_uniqueness_of(${1:attr})${2} }
