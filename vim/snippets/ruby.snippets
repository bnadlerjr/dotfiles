# General
snippet class
	class ${1:`substitute(Filename(), '^.', '\u&', '')`}
		${2}
	end
snippet module
	module ${1:`substitute(Filename(), '^.', '\u&', '')`}
		${2}
	end
snippet each
	each { |${1:e}| ${2} }
snippet eachd
	each do |${1:e}|
		${2}
	end
snippet dop
	do |${1:variable}|
		${2}
	end
snippet lambda
	lambda { |${1:args}| ${2} }
# Rake
snippet task
	desc "${1:Task description\}"
	task :${2:task_name => [:dependent, :tasks]} do
		${3}
	end
# Test Unit
snippet testc
	class ${1:ClassName}Test < Test::Unit::TestCase
		${2}
	end
snippet test
	test "${1}" do
		${2}
	end
snippet debugm
	(${1:obj}.methods.sort - Object.methods).each { |m| p m }
snippet reqrel
	require File.join(File.dirname(__FILE__), '${1}')
snippet fsl
	# frozen_string_literal: true
snippet bp
	binding.pry
snippet rud
	# rubocop:disable ${1:Cop}
snippet rue
	# rubocop:enable ${1:Cop}
snippet subjn
	subject(:${1:object}) { described_class${2} }
snippet itexp
	it { expect(${1:object}).to ${0} }
