#!/usr/bin/env ruby

# Behind firewall in Windows environs that blocks git protocol so I have to use http
protocol = RUBY_PLATFORM =~ /(win|w)32$/ ? 'https' : 'git'

git_bundles = [
  "#{protocol}://github.com/kien/ctrlp.vim.git",                   # Fuzzy file, buffer, mru, tag, etc finder
  "#{protocol}://github.com/scrooloose/nerdcommenter.git",         # quickly (un)comment lines
  "#{protocol}://github.com/msanders/snipmate.vim.git",            # handy code snippets
  "#{protocol}://github.com/tpope/vim-haml.git",                   # HAML support
  "#{protocol}://github.com/vim-ruby/vim-ruby.git",                # packaged w/ vim but this is latest and greatest
  "#{protocol}://github.com/nelstrom/vim-textobj-rubyblock.git",   # custom text object for selecting Ruby blocks
  "#{protocol}://github.com/kana/vim-textobj-user.git",            # dependency for rubyblock
  "#{protocol}://github.com/tpope/vim-rails.git",                  # Rails helpers
  "#{protocol}://github.com/tpope/vim-surround.git",               # makes working w/ quotes, braces,etc. easier
  "#{protocol}://github.com/altercation/vim-colors-solarized.git", # Solarized color theme
  "#{protocol}://github.com/godlygeek/csapprox.git",               # dependency for Solarized
  "#{protocol}://github.com/kchmck/vim-coffee-script.git",         # ugh... a necessary evil... for now
  "#{protocol}://github.com/tpope/vim-bundler.git",                # makes source navigation of bundled gems easier
  "#{protocol}://github.com/tpope/vim-rake.git",                   # makes Ruby project navigation easier for non-Rails projects
  "#{protocol}://github.com/juvenn/mustache.vim.git",              # Mustache support
  "#{protocol}://github.com/mileszs/ack.vim.git",                  # Ack integration
  "#{protocol}://github.com/vim-scripts/vim-less.git",             # LESS syntax highlighting, indentation
  "#{protocol}://github.com/Lokaltog/powerline.git",               # Powerline status plugin
  "#{protocol}://github.com/tpope/vim-fireplace.git",              # Clojure nrepl support
  "#{protocol}://github.com/tpope/vim-classpath.git",              # Clojure JVM classpath
  "#{protocol}://github.com/guns/vim-clojure-static.git"           # Clojure syntax highlighting and indentation
]

vim_org_scripts = []

require 'fileutils'
require 'open-uri'

bundles_dir = File.expand_path(File.dirname(__FILE__), "bundle")

FileUtils.cd(bundles_dir)

trash = ARGV.include?('--trash')

if trash
  puts "Trashing everything (lookout!)"
  Dir["*"].each {|d| FileUtils.rm_rf d }
end

git_bundles.each do |url|
  dir = url.split('/').last.sub(/\.git$/, '')
  if !trash && File.exists?(dir)
    puts "  Skipping #{dir}"
    next
  end
  puts "  Unpacking #{url} into #{dir}"
  `git clone #{url} #{dir}`
  FileUtils.rm_rf(File.join(dir, ".git"))
end

vim_org_scripts.each do |name, script_id, script_type|
  local_file = File.join(name, script_type, "#{name}.#{script_type == 'zip' ? 'zip' : 'vim'}")
  if !trash && File.exists?(local_file)
    puts "  Skipping #{local_file}"
    next
  end
  puts " Downloading #{name}"
  FileUtils.mkdir_p(File.dirname(local_file))
  File.open(local_file, "w") do |file|
    file << open("http://www.vim.org/scripts/download_script.php?src_id=#{script_id}").read
  end
  if script_type == 'zip'
    %x(unzip -d #{name} #{local_file})
  end
end
