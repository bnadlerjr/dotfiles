#!/usr/bin/env ruby
# Usage: git dbr
#
# Deletes both remote and local copy of a branch.

GitCall = Struct.new(:cmd, :type, :pretend_resp)

class DeleteBranches
  def initialize(arg)
    @pretending = pretend? arg
  end

  def run
    delete_remote_branch
    delete_local_branch
  end

  private

  def delete_remote_branch
    puts 'Deleting remote branch...'
    gc = GitCall.new("git push origin #{@upstream_branch} --delete", :command, true)
    run_or_print(gc)
  end

  def delete_local_branch
    puts 'Deleting local branch...'
    gc = GitCall.new("git branch -d #{@current_branch}", :command, true)
    run_or_print(gc)
  end

  def pretend?(arg)
    true if ['-p', '--pretend'].include? arg
  end

  def run_or_print(gc)
    if @pretending
      gc.pretend_resp
    else
      if gc.type == :command
        system("#{gc.cmd} > /dev/null 2>&1")
      else
        `#{gc.cmd}`.chomp
      end
    end
  end
end

DeleteBranches.new(ARGV.first).run
